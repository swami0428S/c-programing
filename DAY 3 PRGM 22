Minimum scalar product

#include <stdio.h>
#include <stdlib.h>
int cmp_asc(const void *a, const void *b) {
    int x = *(int*)a;
    int y = *(int*)b;
    return x - y;
}

int cmp_desc(const void *a, const void *b) {
    int x = *(int*)a;
    int y = *(int*)b;
    return y - x;
}

int main() {
    int n;
    scanf("%d", &n);

    int v1[n], v2[n];

    for (int i = 0; i < n; i++) {
        scanf("%d", &v1[i]);
    }

    for (int i = 0; i < n; i++) {
        scanf("%d", &v2[i]);
    }
    qsort(v1, n, sizeof(int), cmp_asc);
    qsort(v2, n, sizeof(int), cmp_desc);

    long long min_scalar_product = 0;
    for (int i = 0; i < n; i++) {
        min_scalar_product += (long long)v1[i] * v2[i];
    }

    printf("%lld\n", min_scalar_product);

    return 0;
}
